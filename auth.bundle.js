webpackJsonp([4],{10:function(module,exports,__webpack_require__){"use strict";eval('\n\n// import "./modules/preloader";\n\nvar authBtn = document.querySelector("#welcome__btn-auth");\nvar welcomeWrapper = document.querySelector(".welcome");\nvar welcomeBtn = document.querySelector("#welcome__btn");\n\nauthBtn.addEventListener("click", function (ev) {\n  event.preventDefault();\n  welcomeBtn.style.display = "block";\n  setTimeout(function () {\n    welcomeWrapper.classList.toggle("welcome__card--flipped");\n  }, 1);\n});\n\nwelcomeBtn.addEventListener("click", function (ev) {\n  var _this = this;\n\n  event.preventDefault();\n  welcomeWrapper.classList.toggle("welcome__card--flipped");\n  setTimeout(function () {\n    _this.style.display = "none";\n  }, 400);\n});\n\n// adsf asdf asdf asd fasd fasdf\n\nvar container;\nvar camera, scene, renderer;\nvar uniforms;\nvar mouse = { x: 0, y: 0 };\nvar loader = new THREE.TextureLoader();\n\ninit();\nanimate();\n\nfunction init() {\n  container = document.getElementById("container");\n\n  camera = new THREE.Camera();\n  //camera = new THREE.PerspectiveCamera(145, window.innerWidth / window.innerHeight, 1, 5000 );\n  camera.position.z = 1;\n  scene = new THREE.Scene();\n  var geometry = new THREE.PlaneBufferGeometry(2, 2);\n\n  var MyTexture = loader.load("./assets/images/water.jpg");\n  var mapTexture = loader.load("./assets/images/water-maps.jpg");\n  MyTexture.minFilter = THREE.LinearFilter;\n\n  uniforms = {\n    u_time: { type: "f", value: 1.0 },\n    u_animation: { type: "f", value: 0.0 },\n    u_mouse: { type: "v2", value: new THREE.Vector2() },\n    u_resolution: { type: "v2", value: new THREE.Vector2() },\n    u_size: {\n      type: "v2",\n      value: new THREE.Vector2(MyTexture.width, MyTexture.height)\n    },\n    u_image: { value: MyTexture },\n    u_maps: { value: mapTexture }\n  };\n  var material = new THREE.ShaderMaterial({\n    uniforms: uniforms,\n    vertexShader: document.getElementById("vertexShader").textContent,\n    fragmentShader: document.getElementById("fragmentShader").textContent\n  });\n  var mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n  renderer = new THREE.WebGLRenderer();\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  container.appendChild(renderer.domElement);\n  onWindowResize();\n  window.addEventListener("resize", onWindowResize, false);\n}\nfunction onWindowResize(event) {\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  uniforms.u_resolution.value.x = renderer.domElement.width;\n  uniforms.u_resolution.value.y = renderer.domElement.height;\n  uniforms.u_mouse.value.x = mouse.x;\n  uniforms.u_mouse.value.y = mouse.y;\n}\nfunction animate() {\n  requestAnimationFrame(animate);\n  render();\n}\nfunction render() {\n  uniforms.u_time.value += 1.0;\n  renderer.render(scene, camera);\n}\n\ndocument.addEventListener("mousemove", function (event) {\n  TweenLite.to(uniforms.u_mouse.value, 1, {\n    x: (event.pageX / window.innerWidth - 0.5) * 1.5,\n    y: (event.pageY / window.innerHeight - 0.5) * 1.5\n  });\n});\n\n// Validate\n\nvar loginForm = document.querySelector(".login-form");\n\nloginForm.addEventListener("submit", function (ev) {\n  ev.preventDefault();\n  var authLogin = document.querySelector("#auth-login");\n  var authPass = document.querySelector("#auth-pass");\n  var captchaCheckbox = document.querySelector("#captcha-checkbox");\n\n  console.log(captchaCheckbox.checked);\n\n  if (!captchaCheckbox.checked) {\n    var captchaLabel = document.querySelector(".welcome__checkbox");\n    captchaLabel.style.color = "#e44845";\n  }\n\n  validateInput(authLogin);\n  validateInput(authPass);\n});\n\nfunction validateInput(input) {\n  if (!input.value) {\n    var authLabel = input.parentElement;\n    var authError = authLabel.querySelector(".welcome__error");\n\n    authError.style.display = "block";\n    setTimeout(function () {\n      authLabel.classList.add("welcome__label--error");\n    }, 1);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n')}},[10]);