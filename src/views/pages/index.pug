extends ../auth.layout.pug

block content
	.wrapper.welcome#container
		.welcome__card.welcome__card--front
			.welcome__photo(style='background-image: url(../../assets/images/man_photo.jpg)')
			h1.welcome__name Владимир Астахов
			h2.welcome__about Личный сайт веб разработчика
			+social('welcome__social')
			+nav('navigation', [['Мои работы', '/works.html'], ['Обо мне', '/about.html'], ['Блог', '/blog.html']])

		.welcome__card.welcome__card--back
			h1.auth__title.title-strip Авторизируйтесь
			form.login-form
				label.auth__label.auth__icon.auth__login-icon
					input.auth__input(type="text" placeholder='Логин' name='login')
				label.auth__label.auth__icon.auth__password-icon
					input.auth__input(type="password" placeholder='Пароль' name='pass')
				input.auth__input-checkbox(type='checkbox' name='captcha' id='captcha-checkbox')
				label.auth__label.auth__checkbox(for='captcha-checkbox') Я человек
				.radio__row
					input.auth__input-radio(type="radio" name='radio-captcha' id='yes' value='yes')
					label.auth__label.label__radio(for='yes') Да
					input.auth__input-radio(type="radio" name='radio-captcha' id='no' value='no')
					label.auth__label.label__radio(for='no') Не уверен
			nav.navigation
				ul.navigation__list
					li.navigation__item
						button.navigation__button#auth__btn Главная
					li.navigation__item
						button.navigation__button Войти
		
		button.button.welcome__button#welcome__btn Авторизоваться

	script(src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.20.3/TweenLite.min.js")
	script(src="https://threejs.org/build/three.min.js")

	script(id="vertexShader" type="x-shader/x-vertex")
		.
			varying vec2 v_position;
				uniform vec2 u_size;
				uniform vec2 u_resolution;
				
				void main() {
						v_position = (position.xy+1.0)*0.5;
						gl_Position =  vec4(position, 1.0);
				}

	script(id="fragmentShader" type="x-shader/x-fragment")
		.
			uniform float u_time;
				varying vec2 v_position;
				uniform sampler2D u_image;
				uniform sampler2D u_maps;
				uniform vec2 u_mouse;
				uniform float u_dpi;
				uniform vec2 u_resolution;

				vec2 pos(){
						return vec2(0.0,0.0);
				}
				
				vec4 blend(vec4 bg,vec4 fg){
				vec3 bgm=bg.rgb*bg.a;
				vec3 fgm=fg.rgb*fg.a;
				float ia=1.0-fg.a;
				float a=(fg.a + bg.a * ia);
				vec3 rgb;
				if(a!=0.0){
						rgb=(fgm + bgm * ia) / a;
				}else{
						rgb=vec3(0.0,0.0,0.0);
				}
				return vec4(rgb,a);
				}
				vec2 pixel(){
				return vec2(1.0*1.0)/u_resolution;
				}
				float wave(float x,float freq, float speed){
				return sin(x*freq+((u_time*(3.1415/2.0))*speed));
				}
				vec2 waves(vec2 pos){
				vec4 maps=texture2D(u_maps,pos);
				float mask=maps.r;
				float y=maps.g;
				float y2=pow(y,2.0);
				
				vec2 intensity=vec2(
						0.5-(y2*0.5),
						0.2+(y2*1.8)
				)*pixel();
				
				vec2 waves=vec2(
						wave(y,400.0-(y2*200.0),-0.03), 
						wave(y,400.0-(y2*400.0*0.05),-0.045)
						+wave(y,900.0-(y2*900.0*0.05),-0.05)
						+wave(pos.x,20.0+(y2*20.0*1.5),-0.01)
				);
				return pos+(waves*intensity*mask);
				}
				vec2 depth(vec2 pos){
				vec2 intensity=vec2(0.01,0.01);
				float d=0.05-pow(texture2D(u_maps,pos).b,1.0);
				return pos+(intensity*u_mouse*d);
				}

				void main(){
						vec2 pos=v_position.xy;
						vec2 turbulence=depth(waves(pos));
						vec2 noTurbulence=depth(pos);
						vec4 c=texture2D(u_image,turbulence);

						gl_FragColor=vec4(c.rgb,1.0);
				}